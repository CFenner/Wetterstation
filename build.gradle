apply plugin: 'java'

repositories {
    jcenter()
}

configurations.all {
    // ardulink library has transitive dependency which clashes with our own slf4j-log4j library
    exclude group: 'org.slf4j', module: 'slf4j-jdk14'
}

dependencies {
    // logging
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-log4j12:1.7.22'
    
    // raspberry pi gpio access
    compile 'com.pi4j:pi4j-core:1.1'
    compile 'com.pi4j:pi4j-gpio-extension:1.1'
    
    // for web
    compile "com.sparkjava:spark-core:2.5.5"
    
    // database access
    compile 'org.jdbi:jdbi:2.78'
    compile 'org.xerial:sqlite-jdbc:3.16.1'

    testCompile group: 'org.testng', name: 'testng', version: '6.10'
}

task wrapper(type: Wrapper) { 
    gradleVersion = '3.3' 
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

task execute(type:JavaExec) {
    main = "de.whw.anemo.App"
    //main = "de.whw.anemo.sensors.WindDirectionSensor"
    classpath = sourceSets.main.runtimeClasspath
}

task ardulink(type:JavaExec) {
    main = "de.whw.anemo.ardulink.Test"
    classpath = sourceSets.main.runtimeClasspath
}

task ads1115(type:JavaExec) {
    main = "de.whw.anemo.test.ADS1115Test"
    classpath = sourceSets.main.runtimeClasspath
}

